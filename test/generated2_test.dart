// Generated by bisect_test_generator_v2.py at 2021-11-12 00:30:28.785235

import 'package:bisection/bisection.dart';
import 'package:test/test.dart';

val(lst, idx) {
  if (idx < 0)
    return null;
  else
    return lst[idx];
}

void main() {
  test('bisectRight list0', () {
    final lst = [0, 1, 2, 2, 2, 2, 3, 3, 5, 6];
    expect(lst.bisectRight(-2), 0);
    expect(lst.bisectRight(-1), 0);
    expect(lst.bisectRight(0), 1);
    expect(lst.bisectRight(1), 2);
    expect(lst.bisectRight(2), 6);
    expect(lst.bisectRight(3), 8);
    expect(lst.bisectRight(4), 8);
    expect(lst.bisectRight(5), 9);
    expect(lst.bisectRight(6), 10);
    expect(lst.bisectRight(7), 10);
    expect(lst.bisectRight(8), 10);
  });

  test('bisectRight list1', () {
    final lst = [];
    expect(lst.bisectRight(-2), 0);
    expect(lst.bisectRight(-1), 0);
    expect(lst.bisectRight(0), 0);
    expect(lst.bisectRight(1), 0);
    expect(lst.bisectRight(2), 0);
    expect(lst.bisectRight(3), 0);
    expect(lst.bisectRight(4), 0);
    expect(lst.bisectRight(5), 0);
    expect(lst.bisectRight(6), 0);
    expect(lst.bisectRight(7), 0);
    expect(lst.bisectRight(8), 0);
  });

  test('bisectRight list2', () {
    final lst = [3];
    expect(lst.bisectRight(-2), 0);
    expect(lst.bisectRight(-1), 0);
    expect(lst.bisectRight(0), 0);
    expect(lst.bisectRight(1), 0);
    expect(lst.bisectRight(2), 0);
    expect(lst.bisectRight(3), 1);
    expect(lst.bisectRight(4), 1);
    expect(lst.bisectRight(5), 1);
    expect(lst.bisectRight(6), 1);
    expect(lst.bisectRight(7), 1);
    expect(lst.bisectRight(8), 1);
  });

  test('bisectRight list3', () {
    final lst = [2, 3, 4];
    expect(lst.bisectRight(-2), 0);
    expect(lst.bisectRight(-1), 0);
    expect(lst.bisectRight(0), 0);
    expect(lst.bisectRight(1), 0);
    expect(lst.bisectRight(2), 1);
    expect(lst.bisectRight(3), 2);
    expect(lst.bisectRight(4), 3);
    expect(lst.bisectRight(5), 3);
    expect(lst.bisectRight(6), 3);
    expect(lst.bisectRight(7), 3);
    expect(lst.bisectRight(8), 3);
  });

  test('bisectLeft list0', () {
    final lst = [0, 1, 2, 2, 2, 2, 3, 3, 5, 6];
    expect(lst.bisectLeft(-2), 0);
    expect(lst.bisectLeft(-1), 0);
    expect(lst.bisectLeft(0), 0);
    expect(lst.bisectLeft(1), 1);
    expect(lst.bisectLeft(2), 2);
    expect(lst.bisectLeft(3), 6);
    expect(lst.bisectLeft(4), 8);
    expect(lst.bisectLeft(5), 8);
    expect(lst.bisectLeft(6), 9);
    expect(lst.bisectLeft(7), 10);
    expect(lst.bisectLeft(8), 10);
  });

  test('bisectLeft list1', () {
    final lst = [];
    expect(lst.bisectLeft(-2), 0);
    expect(lst.bisectLeft(-1), 0);
    expect(lst.bisectLeft(0), 0);
    expect(lst.bisectLeft(1), 0);
    expect(lst.bisectLeft(2), 0);
    expect(lst.bisectLeft(3), 0);
    expect(lst.bisectLeft(4), 0);
    expect(lst.bisectLeft(5), 0);
    expect(lst.bisectLeft(6), 0);
    expect(lst.bisectLeft(7), 0);
    expect(lst.bisectLeft(8), 0);
  });

  test('bisectLeft list2', () {
    final lst = [3];
    expect(lst.bisectLeft(-2), 0);
    expect(lst.bisectLeft(-1), 0);
    expect(lst.bisectLeft(0), 0);
    expect(lst.bisectLeft(1), 0);
    expect(lst.bisectLeft(2), 0);
    expect(lst.bisectLeft(3), 0);
    expect(lst.bisectLeft(4), 1);
    expect(lst.bisectLeft(5), 1);
    expect(lst.bisectLeft(6), 1);
    expect(lst.bisectLeft(7), 1);
    expect(lst.bisectLeft(8), 1);
  });

  test('bisectLeft list3', () {
    final lst = [2, 3, 4];
    expect(lst.bisectLeft(-2), 0);
    expect(lst.bisectLeft(-1), 0);
    expect(lst.bisectLeft(0), 0);
    expect(lst.bisectLeft(1), 0);
    expect(lst.bisectLeft(2), 0);
    expect(lst.bisectLeft(3), 1);
    expect(lst.bisectLeft(4), 2);
    expect(lst.bisectLeft(5), 3);
    expect(lst.bisectLeft(6), 3);
    expect(lst.bisectLeft(7), 3);
    expect(lst.bisectLeft(8), 3);
  });

  test('bsearch list0', () {
    final lst = [0, 1, 2, 2, 2, 2, 3, 3, 5, 6];
    expect(lst.bsearch(-2), -1);
    expect(lst.bsearch(-1), -1);
    expect(lst.bsearch(0), 0);
    expect(lst.bsearch(1), 1);
    expect(lst.bsearch(2), 2);
    expect(lst.bsearch(3), 6);
    expect(lst.bsearch(4), -1);
    expect(lst.bsearch(5), 8);
    expect(lst.bsearch(6), 9);
    expect(lst.bsearch(7), -1);
    expect(lst.bsearch(8), -1);
  });

  test('bsearch list1', () {
    final lst = [];
    expect(lst.bsearch(-2), -1);
    expect(lst.bsearch(-1), -1);
    expect(lst.bsearch(0), -1);
    expect(lst.bsearch(1), -1);
    expect(lst.bsearch(2), -1);
    expect(lst.bsearch(3), -1);
    expect(lst.bsearch(4), -1);
    expect(lst.bsearch(5), -1);
    expect(lst.bsearch(6), -1);
    expect(lst.bsearch(7), -1);
    expect(lst.bsearch(8), -1);
  });

  test('bsearch list2', () {
    final lst = [3];
    expect(lst.bsearch(-2), -1);
    expect(lst.bsearch(-1), -1);
    expect(lst.bsearch(0), -1);
    expect(lst.bsearch(1), -1);
    expect(lst.bsearch(2), -1);
    expect(lst.bsearch(3), 0);
    expect(lst.bsearch(4), -1);
    expect(lst.bsearch(5), -1);
    expect(lst.bsearch(6), -1);
    expect(lst.bsearch(7), -1);
    expect(lst.bsearch(8), -1);
  });

  test('bsearch list3', () {
    final lst = [2, 3, 4];
    expect(lst.bsearch(-2), -1);
    expect(lst.bsearch(-1), -1);
    expect(lst.bsearch(0), -1);
    expect(lst.bsearch(1), -1);
    expect(lst.bsearch(2), 0);
    expect(lst.bsearch(3), 1);
    expect(lst.bsearch(4), 2);
    expect(lst.bsearch(5), -1);
    expect(lst.bsearch(6), -1);
    expect(lst.bsearch(7), -1);
    expect(lst.bsearch(8), -1);
  });

  test('bsearchLessThan list0', () {
    final lst = [0, 1, 2, 2, 2, 2, 3, 3, 5, 6];
    expect(val(lst, lst.bsearchLessThan(-2)), null);
    expect(val(lst, lst.bsearchLessThan(-1)), null);
    expect(val(lst, lst.bsearchLessThan(0)), null);
    expect(val(lst, lst.bsearchLessThan(1)), 0);
    expect(val(lst, lst.bsearchLessThan(2)), 1);
    expect(val(lst, lst.bsearchLessThan(3)), 2);
    expect(val(lst, lst.bsearchLessThan(4)), 3);
    expect(val(lst, lst.bsearchLessThan(5)), 3);
    expect(val(lst, lst.bsearchLessThan(6)), 5);
    expect(val(lst, lst.bsearchLessThan(7)), 6);
    expect(val(lst, lst.bsearchLessThan(8)), 6);
  });

  test('bsearchLessThan list1', () {
    final lst = [];
    expect(val(lst, lst.bsearchLessThan(-2)), null);
    expect(val(lst, lst.bsearchLessThan(-1)), null);
    expect(val(lst, lst.bsearchLessThan(0)), null);
    expect(val(lst, lst.bsearchLessThan(1)), null);
    expect(val(lst, lst.bsearchLessThan(2)), null);
    expect(val(lst, lst.bsearchLessThan(3)), null);
    expect(val(lst, lst.bsearchLessThan(4)), null);
    expect(val(lst, lst.bsearchLessThan(5)), null);
    expect(val(lst, lst.bsearchLessThan(6)), null);
    expect(val(lst, lst.bsearchLessThan(7)), null);
    expect(val(lst, lst.bsearchLessThan(8)), null);
  });

  test('bsearchLessThan list2', () {
    final lst = [3];
    expect(val(lst, lst.bsearchLessThan(-2)), null);
    expect(val(lst, lst.bsearchLessThan(-1)), null);
    expect(val(lst, lst.bsearchLessThan(0)), null);
    expect(val(lst, lst.bsearchLessThan(1)), null);
    expect(val(lst, lst.bsearchLessThan(2)), null);
    expect(val(lst, lst.bsearchLessThan(3)), null);
    expect(val(lst, lst.bsearchLessThan(4)), 3);
    expect(val(lst, lst.bsearchLessThan(5)), 3);
    expect(val(lst, lst.bsearchLessThan(6)), 3);
    expect(val(lst, lst.bsearchLessThan(7)), 3);
    expect(val(lst, lst.bsearchLessThan(8)), 3);
  });

  test('bsearchLessThan list3', () {
    final lst = [2, 3, 4];
    expect(val(lst, lst.bsearchLessThan(-2)), null);
    expect(val(lst, lst.bsearchLessThan(-1)), null);
    expect(val(lst, lst.bsearchLessThan(0)), null);
    expect(val(lst, lst.bsearchLessThan(1)), null);
    expect(val(lst, lst.bsearchLessThan(2)), null);
    expect(val(lst, lst.bsearchLessThan(3)), 2);
    expect(val(lst, lst.bsearchLessThan(4)), 3);
    expect(val(lst, lst.bsearchLessThan(5)), 4);
    expect(val(lst, lst.bsearchLessThan(6)), 4);
    expect(val(lst, lst.bsearchLessThan(7)), 4);
    expect(val(lst, lst.bsearchLessThan(8)), 4);
  });

  test('bsearchLessThanOrEqualTo list0', () {
    final lst = [0, 1, 2, 2, 2, 2, 3, 3, 5, 6];
    expect(val(lst, lst.bsearchLessThanOrEqualTo(-2)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(-1)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(0)), 0);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(1)), 1);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(2)), 2);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(3)), 3);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(4)), 3);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(5)), 5);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(6)), 6);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(7)), 6);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(8)), 6);
  });

  test('bsearchLessThanOrEqualTo list1', () {
    final lst = [];
    expect(val(lst, lst.bsearchLessThanOrEqualTo(-2)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(-1)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(0)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(1)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(2)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(3)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(4)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(5)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(6)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(7)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(8)), null);
  });

  test('bsearchLessThanOrEqualTo list2', () {
    final lst = [3];
    expect(val(lst, lst.bsearchLessThanOrEqualTo(-2)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(-1)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(0)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(1)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(2)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(3)), 3);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(4)), 3);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(5)), 3);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(6)), 3);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(7)), 3);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(8)), 3);
  });

  test('bsearchLessThanOrEqualTo list3', () {
    final lst = [2, 3, 4];
    expect(val(lst, lst.bsearchLessThanOrEqualTo(-2)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(-1)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(0)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(1)), null);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(2)), 2);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(3)), 3);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(4)), 4);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(5)), 4);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(6)), 4);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(7)), 4);
    expect(val(lst, lst.bsearchLessThanOrEqualTo(8)), 4);
  });

  test('bsearchGreaterThan list0', () {
    final lst = [0, 1, 2, 2, 2, 2, 3, 3, 5, 6];
    expect(val(lst, lst.bsearchGreaterThan(-2)), 0);
    expect(val(lst, lst.bsearchGreaterThan(-1)), 0);
    expect(val(lst, lst.bsearchGreaterThan(0)), 1);
    expect(val(lst, lst.bsearchGreaterThan(1)), 2);
    expect(val(lst, lst.bsearchGreaterThan(2)), 3);
    expect(val(lst, lst.bsearchGreaterThan(3)), 5);
    expect(val(lst, lst.bsearchGreaterThan(4)), 5);
    expect(val(lst, lst.bsearchGreaterThan(5)), 6);
    expect(val(lst, lst.bsearchGreaterThan(6)), null);
    expect(val(lst, lst.bsearchGreaterThan(7)), null);
    expect(val(lst, lst.bsearchGreaterThan(8)), null);
  });

  test('bsearchGreaterThan list1', () {
    final lst = [];
    expect(val(lst, lst.bsearchGreaterThan(-2)), null);
    expect(val(lst, lst.bsearchGreaterThan(-1)), null);
    expect(val(lst, lst.bsearchGreaterThan(0)), null);
    expect(val(lst, lst.bsearchGreaterThan(1)), null);
    expect(val(lst, lst.bsearchGreaterThan(2)), null);
    expect(val(lst, lst.bsearchGreaterThan(3)), null);
    expect(val(lst, lst.bsearchGreaterThan(4)), null);
    expect(val(lst, lst.bsearchGreaterThan(5)), null);
    expect(val(lst, lst.bsearchGreaterThan(6)), null);
    expect(val(lst, lst.bsearchGreaterThan(7)), null);
    expect(val(lst, lst.bsearchGreaterThan(8)), null);
  });

  test('bsearchGreaterThan list2', () {
    final lst = [3];
    expect(val(lst, lst.bsearchGreaterThan(-2)), 3);
    expect(val(lst, lst.bsearchGreaterThan(-1)), 3);
    expect(val(lst, lst.bsearchGreaterThan(0)), 3);
    expect(val(lst, lst.bsearchGreaterThan(1)), 3);
    expect(val(lst, lst.bsearchGreaterThan(2)), 3);
    expect(val(lst, lst.bsearchGreaterThan(3)), null);
    expect(val(lst, lst.bsearchGreaterThan(4)), null);
    expect(val(lst, lst.bsearchGreaterThan(5)), null);
    expect(val(lst, lst.bsearchGreaterThan(6)), null);
    expect(val(lst, lst.bsearchGreaterThan(7)), null);
    expect(val(lst, lst.bsearchGreaterThan(8)), null);
  });

  test('bsearchGreaterThan list3', () {
    final lst = [2, 3, 4];
    expect(val(lst, lst.bsearchGreaterThan(-2)), 2);
    expect(val(lst, lst.bsearchGreaterThan(-1)), 2);
    expect(val(lst, lst.bsearchGreaterThan(0)), 2);
    expect(val(lst, lst.bsearchGreaterThan(1)), 2);
    expect(val(lst, lst.bsearchGreaterThan(2)), 3);
    expect(val(lst, lst.bsearchGreaterThan(3)), 4);
    expect(val(lst, lst.bsearchGreaterThan(4)), null);
    expect(val(lst, lst.bsearchGreaterThan(5)), null);
    expect(val(lst, lst.bsearchGreaterThan(6)), null);
    expect(val(lst, lst.bsearchGreaterThan(7)), null);
    expect(val(lst, lst.bsearchGreaterThan(8)), null);
  });

  test('bsearchGreaterThanOrEqualTo list0', () {
    final lst = [0, 1, 2, 2, 2, 2, 3, 3, 5, 6];
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(-2)), 0);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(-1)), 0);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(0)), 0);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(1)), 1);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(2)), 2);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(3)), 3);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(4)), 5);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(5)), 5);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(6)), 6);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(7)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(8)), null);
  });

  test('bsearchGreaterThanOrEqualTo list1', () {
    final lst = [];
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(-2)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(-1)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(0)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(1)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(2)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(3)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(4)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(5)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(6)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(7)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(8)), null);
  });

  test('bsearchGreaterThanOrEqualTo list2', () {
    final lst = [3];
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(-2)), 3);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(-1)), 3);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(0)), 3);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(1)), 3);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(2)), 3);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(3)), 3);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(4)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(5)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(6)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(7)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(8)), null);
  });

  test('bsearchGreaterThanOrEqualTo list3', () {
    final lst = [2, 3, 4];
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(-2)), 2);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(-1)), 2);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(0)), 2);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(1)), 2);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(2)), 2);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(3)), 3);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(4)), 4);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(5)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(6)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(7)), null);
    expect(val(lst, lst.bsearchGreaterThanOrEqualTo(8)), null);
  });
}
